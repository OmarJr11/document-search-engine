acerca algoritmo dijkstra alvaro h. sala s. resumir in this paper we prove the correctness of dijkstras algorithm we also discuss it and at the end we show an application artculo realizar descripcion detallado algoritmo dijkstra justicar correctitud discutiendolo mostrar aplicación palabra clave grafo digrafo digrafo ponderado digrafo pesado peso camino camino coste mnimo camino minimal 1 introducccion grafo etiqueta negativo calcular coste camino mnimo vertice resto ing single-source shortest paths utilidad procedimiento solucionir cuestion claro caso habitual disponer grafo representar distribucion geograca arista dar coste precio distancia similar conexion lugar necesario averiguar camino corto llegar punto partir determinar secuencia arista llegar nodo coste mnimo solucion eciente problema denominado algoritmo dijkstra honor creador e.w dijkstrar formulado 1959 .a note on two problems in connexion with graphs numerical mathematico 1 pp 269-271 grafo dirigido algoritmo dijkstra algoritmo voraz algoritmo goloso generar camino nodo resto orden creciente longitud conjunto s vertiz paso algoritmo guardar nodo camino mnimo devolver vector indexado vertiz vertiz determinar coste camino economico peso mnimo tal vertiz incorporar nodo solucion compruebir camino todava denitivo acortar pasar departamento matematica universidad calda departamento matematica universidad nacional colombia manizal email asalash2002@yahoo.com 1 arxiv:0810.0075v1   cs.ds   1 oct 2008   2 preliminar recorder digrafo eng directed graph pareja g = v v conjunto relacion binario irreexivo v subconjunto v   v x x /e x e. decir v conjunto vertiz conjunto arista eng edges sucesivo supondrer v nito dar arista v decimos vertiz v adyacente arista incidente v llamar camino v denotado v sucesion nita vertiz = x0 x1 xi xi+1 xm1 xm = v 2.1 xi xi+1 arista i = 0 1 m1 denicion 2.1 camino figurar 1 camino v longitud m vertice inicial v vertice terminal x1 x2 xm1 vertiz interno digrafo ponderar pesado arista v asignar numero real denotado p(u v llamar peso sucesivo consideraremos digrafo ponderado g peso positivo p(u v > 0 arista v e. peso camino 2.1 denir suma peso arista p(u v = p(x0 x1 + p(x1 x2 +     + p(xm1 xm 2.2 camino coste mnimo encontrar ningun camino v cuyo peso menor p(u v palabra camino v = y0 y1 yk1 yk = v p(u y1 + p(y1 y2 +     + p(yk1 v p(u v 2   3 algoritmo dijkstra descripcion sustentacion correctitud g = v digrafo ponderado peso positivo n vertiz suponer z vertiz v z = camino z. principal objetivo consistir hallar camino z coste mnimo problema resolver eciente algoritmo dijkstra algoritmo iniciar vertice construir camino coste mnimo = u0 u1 um1 um = z ui camino coste mnimo i = 0 1 m. 3.1 algoritmo dijkstra entrada grafo ponderado dirigido n vertiz peso positivo z vertiz distinto tal algun camino z. salido peso camino coste mnimo z. paso 1 denir s0 = t0 = v asignar vertice v v etiqueta eng label l(v = 0 v = l(v = v = a. pasar 2 i = 1 2 n suponer construir conjunto s0 s1 si1 ti1 = v si1 z si1  denir s = si1  deten construccion caso contrario escoger vertice ti1 menor eqtiqueta l(u = mn{l(v | v ti1 denir ui1 = = si1{ui1 = u0 u1 ui1 decir entrar = v \si vertice v adyacente cambiamo etiqueta l(v etiqueta mn{l(v l(u + p(u v l(v mn{l(v l(u + p(u v actualizar etiqueta vecinosde pasar 3 i = n denir s = sn detener i < n i = i + 1 paso 2 algoritmo dijkstra terminar momento encontrar ndice m z sm momento s = sm 3   3.2 correctitud algoritmo dijktra justicacion correctitud notable algoritmo basar teorema 1 nalizar ejecucion algoritmo dijkstra s = a. camino peso l(u l(u p(a b. camino peso l(u particular l(u nito l(u < demostracion harar demostracion induccion i 1 i = 1 inicialmente paso 2 s0 = t0 = v z /s0 paso 2 escoger vertice etiqueta menor demas vertiz etiqueta > 0 as vertice = u0 entrar s1 = u0 t1 = v s1 hipotesis camino z. = x0 x1 xm1 xm = z 3.3 camino x1 t1 vecino u0 as conjunto vecino u0 s0 vaco paso 2 actualizar etiqueta vecino v cualquiera etiqueta mn{l(v l(a + p(a v = mn 0 + p(a v = p(a v etiqueta v momento cambiar peso arista v suponer u1 vecino menor etiqueta vecino economico cercano u0 = cuyo caso escoger cualquiera l(u1 = mn{p(a v | v t1 v vecino = p(a u1 3.3 camino z. l(u1 p(a x1 p(a x1 + p(x1 x2 +     + p(xm1 z = p(a z condicion cumplir i = 1 b u1 camino u1 peso p(a u1 = p(a u1 = l(u1 anterior argumento teorema valer i = 1 suponer teorema cumplir vertiz ui s 1 i k. ver teorema valer vertice uk+1 considerer camino v = uk+1 figurar 2 ver l(v p(av falso tendrar l(v > p(a v suponer vertice camino 4   figurar 2 camino arbitrario v sk+1 predecesor camino sk+1 = u0 u1 uk hipotesis inductivo l(u p(au l(v = l(uk+1 l(y l(v l(y l(u + p(u p(a + p(u = p(a p(a v < l(v contradiccion consecuencia teorema cumplir i = k + 1 suponer camino 3.3 vertice = xj sk+1 = u0 u1 uk figura 3 = xj vecino = xj1 sk+1 hipotesis figurar 3 existencia camino uk+1 peso l(uk+1 inductivo camino b t peso l(u l(u nito entro s etiqueta vecino actualizar l(y l(u)+p(u < uk+1 sk+1 as l(uk+1 l(y < inicialmente paso 2 vertice uk+1 tena etiqueto observ uk+1 = =  u0 k + 1 = 0 momento actual acabir demostrar vertice etiqueta nita signico algun momento actualizar cambio l(uj + p(uj uk+1 algun j j k. perdida generalidad suponer valor actual l(uk+1 l(uk+1 = l(uj + p(uj uk+1 3.4 5   hipotesis inductivo camino uj peso l(uj agregar camino arista uj uk+1 obtener camino peso l(uj + p(uj uk+1 = l(uk+1 b satisfacer i = k + 1 teorema demostrado   teorema antwerior a. algoritmo terminar efecto probemo induccion i 1 elemento distinto i = 1 s1 = u0 caso demostrar suponer elemento distinto algun i 1 z /si x vertice s camino z vecino x entro s etiqueat actualacer l(y l(x < escoger = v elemento etiqueta mnima nitir l(y precisamente elemento ui denir si+1 = u0 u1 ui1 ui elemento si+1 distinto consiguiente i n algoritmo terminar b. l(u peso camino coste mnimo s efecto camino coste mnimo facil peso considerar camino peso q menor peso camino cuyo existencia garantizar b teorema q l(u teorema camino peso l(u q l(u concluir q = l(u particular tomar = z s obtenemos l(z peso camino coste mnimo z. c. um = z l(u0 l(u1     l(uj l(uj+1     l(um efecto elemento uj uj+1 entrar s = sm encontrar tj = v sj escoger uj elemento etiqueta mnima l(uj l(uj+1 4 discusion suponer aplicamos algoritmo dijkstra empezar vertice arbitrario a. calidad z tomamos vertice distinto a. camino z algoritmo funcionar suponer camino caso z pertenecer conjunto aplicar paso algoritmo detener momento 6   etiqueta vertiz entrar dar vertiz arbitrario distinto z tomar vertice inicial ejecutar paso algoritmo deteniendono momento mn{l(v | v = obtener conjunto s v vertiz z /s ningun camino z. par- ticular s = arista partar vecino caso decir vertice aislado s = v camino vertice etiqueta nal dicho vertiz camino peso mnimo a. caber anotar peso camino coste mnimo z distinto peso camino coste mnimo z a. ejemplo z representar ciudad vecino decir peso arista z z representar coste transportar mercanca ciudad general p(a z = p(z algoritmo dijkstra proporcionar l(z = p(a z tomar vertice inicial l(a = p(z z vertice inicial caso grafo g = v relacion simetrico decimos grafo dirigir arista bidireccional arista colocamos echa caso l(a = l(z par vertiz grafo 5 algoritmo dijkstra modicado ocasión interesar peso camino coste mnimo vertiz dado ruta seguir llegar vertiz caso vertice distinto agregamos etiqueta adicional vertice v = asociar pareja l(v paso 1 l(v = ejecutar paso 2 vertice vecino etiqueta l(v = p(u v caso contrario etiqueta inicial suponer determinado momento etiqueta vertice v /s actualizar v vecino vertice aca- ba entrar s l(u + p(u v < l(v etiqueta v cambiar l(v = l(u + p(u v vertice predecesor camino coste mnimo v. terminar algoritmo etiqueta v l(v = l(v observar etiqueta u. l(u = l(u t camino coste mnimo v forma t v. observar etiqueta t obtener predecesor proceder llegar vertice b cuyo etiqueta l(b = l(b momento haber obtener camino b t v coste mnimo l(v 7   6 aplicacion seccion mostrarer aplicacion algoritmo dijkstra caso concreto figura 4 mostrar grafo dirigido ponderado haller camino coste mnimo z. figurar 4 grafo ponderado ejecucion algoritmo ilustrar continuacion 8   figura 12 camino coste mnimo z b c d z. camino peso 10 referencia 1 r. johnsonbaugh matematica discretas prentice hall cuarto edicion pag 338343 9