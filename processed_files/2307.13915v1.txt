algoritmo concurrente conjunto pila multiplicidad setstacklogic jo él damiar lopez universidad nacional autonomo mexico ciudad mexico mexico dated julio presente artculo objetivo describir explicar fundamento teorico ritmo concurrente concurrent conjunto considerar sistema memoria compartido asincronico numero proceso colapsar verificacion algoritmo concurrent describir condicion progreso garantizar tualmente sucedero llamado seguridad algoritmo correctitud garantizar malo sucedero llamado viveza algoritmo explicar detalle significado correccion algoritmo concurrente centrando yo linealizabilidad abordar generalizacion concurrencia conjunto reciente conocido mostrar algoritmo setstacklogic algoritmo concurrente conjunto implementacion pila multiplicidad demostrar formal detallado propiedad algoritmo setstacklogic presentar esquema riguroso formalizacion tipo algoritmo podra utilizar algoritmo explicar funcionamiento algoritmo ejemplo escenario ilustran dinamica posible ejecución introduccion contexto estudio teora computacion determín problema computable resolver algoritmo as eficiencia estudio mos comenzo turing cuyo resultado llevar formalizar concepto algoritmo maquina turing llevar tesis maquina turing descrita modelo multicinta equivalente computacional maquina secuencial palabra modelo equivalente problema resolver eventualmente necesario desarrollar concepto formal eficiencia algoritmo complejidad buscar desarrollar estudiar algoritmo poder resolver problema tiempo razonable modelo computo equivalente llegar poseer desempeno considerablemente solución disminuir complejidad algoritmo poder ejecutar proceso forma simultaneo arquitectura multinucleo experimentar auge diseno evitar sobrecalentamiento generado nucleo procesador trabajar alto velocidad arquitectura multinucleo descrito modelo computo concurrente permitir aumentar eficiencia objetivo cambiar explotar paralelismo desafo destacado computo moderno jul relajacion multiplicidad recientemente buscar mejorar rendimiento objeto concurrente relajar semantica particular estudio centrar relajacion cola pila grar mejora significativo rendimiento relajacion estructura multiplicidad intuitivamente estructura multiplicidad conjunto operación simultanea actuan objeto cambiar operacion haber ejecutar multipl operación actuan objeto concurrent contador cola pila conjunto to implementar sistema asincronico proceso simultaneo comunicar acceder memoria compartido propenso falla organizacion seccion ii fundamento teorico as modelo computacion currente describir noción formal operación concurrencia operación seccion iii explicar describir formalmente nocion correctitud algoritmo concurrente seccion iv mostrar algoritmo setstacklogic algoritmo concurrente conjunto implementacion pila multiplicidad literatura encontrar diverso objeto concurrent as tipo semantica relajado objeto concurrent intervalo seccion v demostracion formal rosa propiedad algoritmo setstacklogic proposito explicar enfoque formal claro preciso emplear objeto concurrent seccion vi explicar ejemplo funcionamiento algoritmo setstacklogic ii fundamento algoritmo concurrente hilo coordinar modificar simultaneo informacion encontrar almacenado memoria compartido reto difcil solucionar tipo algoritmo coordinar modificación tes forma dato memoria compartido estir consistente forma ocurrar falla inesperado llegar encontrar computo secuencial formalmente entender proceso transicion maquina transición denominir evento denotar transición q p evento q proceso evento p proceso evento interpretacion claro proceso concurrente na evento transición ejecución instrucción podran dejar invariante maquina evento instantaneo ocurrir instante tiempo conveniente exigir evento simultaneo evento distinto ocurrir momento to permitirar inducir orden conjunto evento ejecucion algoritmo concurrent hilo producir secuencia evento an denotar jesma cia evento ai aj evento preceder evento b ocurrir b denotar relacion precedencia orden evento nocion tiempo ocurrir evento evento definir intervalo duracion intervalo preceder intervalo denotir io ib relacion orden parcial intervalo definir intervalo concurrent relacionado ia ib ib ia definición permitir describir claro operación metodo quier algoritmo describir concurrent esquema operacion intervalo invocacion llamado operacion evento posteriormente finalizacion dicho operacion retorno evento marcar operacion modelo computacion considerar modelo estandar sistema concurrent usar n proceso asncrono pn llegar fallar cion formalmente proceso falla dejar paso ndice proceso pi proceso comunicar s invocar operación atomica objeto base compartido objeto base proporcionar operación atomica lectura escritura objeto denominar registro operación atomica potente lectura modificacion escritura objeto concurrente t definir maquina constar conjunto conjunto finito operación conjunto transición especificacion necesariamente secuencial operación pendiente transición involucrar invocación nocion objeto concurrente formalizar siguiente subsección implementacion objeto concurrente t algoritmo distribuido constar maquina local an maquina local ai especificar operación objeto base pi ejecuta devolver respuesta invocar operacion alto nivel invocación operacion objeto base paso ejecucion secuencia posiblemente infinito paso ejecución operación objeto base invocación respuesta operación objeto concurrente t siguiente propiedad proceso secuencial invocar operacion puesto correspondiente invocar operacion ejecución formado invocacion operacion op denotado proceso pi paso pi invocacion respuesta correspondiente denotado paso especificado pi invoca op operacion op completo invocacion respuesta aparecer cion operacion pendiente ejecucion aparecer invocacion proceso correcto ejecucion tomar infinito paso simplicidad perdida generalidad identificar invocacion operacion paso respuesta paso condición progreso comportamiento objeto concurrent describir propiedad seguridad viveza denominado condición progreso verificacion algoritmo concurrent analizar aspecto fundamental condicion progreso garantizar eventualmente sucedero llamado seguridad algoritmo correctitud garantizar malo sucedero llamado viveza algoritmo correctitud detallarer seccion pecificación condición progreso bloqueant bloqueant condición progreso bloqueant llegar producir retraso inesperado proceso retrasar ejecucion instrucción completo mento demas proceso continuir condición progreso bloqueant metodo condicion progreso bloqueante soler basado lenguaje java lock cuyo funcionamiento basar cumplir exclusion mutuo precisamente candado indicar hilo ejecutar seccion crtico bloquear entrada dema hilo satisfacer clusion mutuo forma candado usar aislar seccion crtico hilo adquirir liberar seccion crtico hilo encontrar ejecucion lenguaje java hilo ejecutar seccion crtico adquiere bloquea hilo esperar respuesta solicitud adquirir acceso seccion crtico caber mencionar fallo suspension hilo producirar bloqueo hilo podra recibir respuesta candado java poseer infraestructura capturar excepción caber tener él formalicer exclusion mutuo algoritmo sca intervalo hilo ejecuta seccion crtico sc formalmente algoritmo satisfago exclusion mutuo cumplir sección crtica hilo superponer hilo b considerer intervalo sca scb  ejecutar sección crtica suceder sca scb scb sco mencionar condición progreso bloqueantes recurrir candado algun hilo intentar adquirir candado algun hilo b hilo tendrar exito adquirir candado entrar seccion crtico hilo intentar adquirir candado exito algun to adquisicion candado eventualmente liberar notese condicion implicar condicion dicion importante asegurar sistema bloquear hilo individual atascar él esperar adquisicion candado denominar inanicion starvation existir hilo seguir ejecutar seccion crtico condición progreso ver condición progreso bloqueant recurrir candado satisfacer exclusion mutuo definir tipo condición so necesidad recurrir candado conocer condición progreso retraso inesperado proceso retrasar dema proceso condición importante siguiente condicion metodo operacion termín ejecutar él numero finito paso goritmo metodo operación componer condicion metodo operacion garantizar cion infinito infinito operación completar numero finito paso palabra condicion garantizar proceso fallar subitamente eventualmente progrés metodo rev metodo llegar ineficiente propiedad restrictivo util podrar condición progreso version condición recurrir definicion candado sumamente util modelo computacion concurrente presento considerar posible falla proceso algoritmo mostrar principal contribucion recurrir candado discutir iii correctitud diverso noción correccion objeto concurrent propuesta mayora basar nocion equivalencia comportamiento secuencial presentar condición correccion consistencia inactivo quiescent tency consistencia secuencial sequential consistency linealizabilidad propiedad importante linealizabilidad modular llamado local propiedad linealizabilidad condicion correccion fuerte primero condicion correctitud linealizabilidad linealizabilidad nocion estandar utilizado definir implementacion rrente correcto objeto definido especificacion secuencial intuitivamente ejecucion linealizable operación ordenar él secuencialmente reordenar operación superponer respuesta satisfagar especificacion objeto implementado definir especificacion secuencial objeto concurrente t maquina especificado trav funcion transicion q invocacion q devolver tupla q conjunto tup él maquina determinista indicar maquina pasar q respuesta op especificación escribir salto tuplar op r r valor salida operacion secuencia tupla producido maquina denominar ejecución secuencial formalizar linealizabilidad deber definir orden parcial operación completado ejecucion denotar op op decir operación concurrent incomparab él denotar operación concurrent definicion linealizabilidad implementacion objeto concurrente ejecucion linealizable ejecucion secuencial s t s contener operación completado contener operación pendiente entrada salida invocación respuesta s concuerdar entrada salida cualesquiero operación completado op op suceder op op op aparecer op decir linealizable ejecución linealizable objeto concurrente correcto tratar encontrar forma tender orden parcial orden condicion correccion linealizabilidad buscar justamente mencionar anteriormente dar ejecucion relacion orden parcial ejecucion linealizable relacion convertir orden explicar concepto linealizabilidad ejemplo considerar hilo b ejecutar programa obtener secuencia llamada respuesta operación denoter simplicidad llamado hilo b ia i llamar anteriormente respuesta ra i claramente superposición llamado metodo llamado hecho hilo evento invocación respuesta orden tiempo real invocación respuesta metodo llamado b asignar orden secuencial orden mostrar continuacion figurar secuencia evento ejecucion hilo b ordenacion tiempo real evento mostrar flecha punteado rojo orden evento mostrado ia ib ra rb ia ib ra rb secuencia evento representar ejecucion definir forma distinto llamar historial equivalente punto definicion linealizabilidad informalmente significar reordenacion evento respetar orden operación cumplir op op significar evento respuesta operacion ocurrio evento llamada operacion reordenacion preservar orden ejemplo reordenación valida ejecucion mostrado figura ia ra ib rb ib rb ia ra ib rb ia ra ib rb ia ra ib rb ia ra ia ra ib rb ia ra ib rb ia ra ib rb formalmente reordenación ejecución secuencial observ permutar orden evento llamada respuesta metodo concurrent deber remarcar natural metodo concurrent metodo ejecutar duracion ejecucion paralelo figurar ejecucion metodo lectura w escritura r ejecución secuencial confirmar ejecucion correcto aqu referir ejecucion definicion definicion formal ejecucion secuencial consistente ejecucion ejecucion linealizable ejemplo sencillo considerar ejemplo pensar operación referir invocación metodo escritura denotado evento writte w finalizar lectura evento read r mostrar figura ejecucion bastar tomar ejecucion secuencial secuencia secuencia valer especificacion secuencial registro read obtener valor write reciente condicion correctitud linealizabilidad conjunto linealizacion conjunto permitir linealizar operación punto operación ejecutar simultaneamente linealizacion conjunto estrictamente expresividad linealizacion tipo denominado linealizacion intervalo estrictamente poderoso cion conjunto linealizabilidad linealizacion conjunto propiedad especificacion objeto concurrente diferir ejecucion secuencial recibir entrada actual q maquina conjunto inv invocación operación q inv retornar q r q r respuesta invocación inv conjunto inv r llamar clase concurrencia deber mencionar especificacion clase concurrencia unico elemento corresponder especificacion secuencial definicion linealizabilidad conjunto implementacion objeto currente ejecucion linealizable conjunto ejecucion s t s contener operación completado contener operación pendiente entrada salida invocación respuesta s concuerdar entrada salida cualesquiero operación completado op op suceder op op op aparecer op decir linealizable conjunto ejecución linealizable conjunto deber resaltar conjunto clase equivalencia relacion clase equivalencia operación concurrent interpretacion linealizabilidad caso considerar conjunto llamada conjunto respuesta iv pila concurrent conjunto multiplicidad termino general pila semantica relajado denominar multiplicidad mite operación simultanea pop quitar obtengar elemento elemento devolver orden lifo perder ningun elemento formalmente pila conjunto concurrent especificar definicion conjunto elemento push n conjunto q conjunto infinito cadena n inicial cadena vaco indicado q elemento q representar superior pila podrar vaco q cadena vaco transición siguiente q q q p q p t rue q q n t proceso q p p opt q p p opt pila vaco q p op p op lema mostrar algoritmo implemente pila concurrente conjunto mantener comportamiento pila secuencial caso unico razon implementacion proporcionar capacidad linealizacion unicamente operación pop concurrent pila secuencial describir definicion punto restringir t proceso algoritmo setstacklogic describir algoritmo linealizable conjunto implementacion pila multiplicidad describir estructura nodo formar pila usual estructura dato tipo cola pila estir formado lista nodo contener elemento tipo primitivo concurrencia multiplicidad necesario definir estructura complejo nodo definir tipo operación util recurrir objeto tipo atomicreference proveer java variable tipo atomicreference proporcionar referencia algun objeto leer escribir atomicamente multipl hilo intentar modificar referencia almacenado variable tipo atomicreference atomico referencia consistente modificación suponer momento referencia instancia dado atomicreference objeto nodoi definirar estructura nodo metodo principal instancia get metodo permitir referencia almacenado variable tipo atomicreference leer atomicamente metodo comparar referencia almacenado instancia atomicreference llamemosle rencia esperado referencia igual tonz metodo insertar referencia instancia atomicreference metodo compareandset cambiar referencia instancia atomicreference retorna t rue regurlarmente referir caso decir metodo compareandset exitoso caso contrario referencia sufrir ningun bio metodo retornar f alse referirer caso decir metodo fallir exitoso algorithm nodo value entero valor x next nodo elim variable booleana nodo definido estructura mostrar algoritmo nodo contener atributo llamado value valor tipo primitivo almacenado nodo supondrer entero simplicidad concordancia definicion atributo next objeto tipo nodo cuyo funcion referencia atributo elim variable booleán atributo next referencia nodo lista nodo nodo poseer atributo booleano elim cuyo funcion indicar nodo pila formalizar nocion denominar logico figurar panel representacion estructura pila referencia atomico t op panel b representacion estructura pila elemento pila pila vaco estructura pila representar lista nodo vear figura lista nodo poseer referencia next referencia nodo lista valor nodo value referencia nodo apuntar null tener problema ar compareanset caso evitar problema ar claridad suponer nodo referencia distinto nodo cuyo variable booleana elim t rue tomar pila variable indicar nodo formar pila algoritmo constar variable tipo atomicreference nodo t op contener referencia nodo lista t referencia apuntar nodo regularmente llamar cabezal referencia atomico t op encapsular pila figura panel representar pila algoritmo setstacklogic rencia atomico t op apuntar nodo lista lista nodo conformado par valor entero booleano an tn nodo pertenecer pila cuyo variable booleana f alse panel b representar pila vaco ningun nodo t op apuntar referencia nulo notese representar perfectamente pila vaco lista nodo panel nodo posear t rue memoria pila vaca unico algoritmo setstacklogic presentar continuacion inspirado algoritmo lockfreestack algoritmo linealizable pila lock freir algorithm setstacklogic shared v ariabl top procedurar while true do t if false thir t if x thir return true end if else end if end while end procedure procedure pop while true do t if t thir return end if if false thir true return else end if end while end procedure discutir estructura representacion pila pasar describir operación algoritmo setstacklogic operación usual cumpliran multiplicidad p ush p op p anadir nodo x orden lifo operacion iniciar ciclo w hile iteracion intento insertar nodo x pila iteracion extraer nodo t referencia cabezal t op nodo t logicamente eliminar lneo t rue avanzar cabezal t op nodo compareandset caso nodo apuntar cabezal logicamente eliminar f alse conectar referencia nodo t nodo cambio cabezal t op x caso exitoso nodo x insertar correctamente retornar lneo caso contrario volver iterar intento p op remover nodo orden lifo pila operacion iniciar ciclo w hile iteracion intento remover nodo pila iteracion extraer nodo t referencia cabezal t op nodo t operacion retornar valor nulo lnear indicar pila vaca caso contrario nodo nulo evaluar lneo elim f alse nodo logicamente eliminado pasar cabezal nodo lneo notese pila constar nodo eliminado logicamente cabezal avanzar llegar referencia nulo nodo pila logicamente elim f alse lnea eliminar logicamente nodo lneo referencia t op avanzar nodo finalmente retornar valor nodo eliminado lneo teorema enuncia propiedad algoritmo setstacklogic cumplir podrar apreciar mostrar formalmente nocion logico pila correctitud algoritmo teorema algoritmo setstacklogic implementacion linealizable conjunto pila multiplicidad seccion demostrar teorema demostracion divida forma subseccion v demostrar algoritmo satisfacer seccion v b describir forma construir linealizacion conjunto subseccion definir punto linealizacion subseccion v c mostrar usar punto linealizacion subseccion v b obtener efectivamente cion conjunto subseccion v d demostrar linealizacion conjunto dado subseccion v c implementacion pila multiplicidad formalmente cumplir transición corresponder pila dado definicion denotar operacion p op devolver valor x p op x operacion p ush insertar valor x denotar p true demostracion formal prueba ver algoritmo suponer ejecucion infinito algoritmo op operacion cualquiera suponer op operacion p ush veamos operacion completado evaluación lnea fallar cantidad infinito lneo falla existir operacion p op altero valor variable elim nodo t ejecutar lneo defecto nodo poseer f alse not p op ejecutar lneo retornar instrucción completo resumen lneo falla existir operacion p op completado lneo falla sgnico metodo compareandset lneo falla iteracion operacion op p op p ush ejecutar exito operacion compareandset iteracion ver existir operacion completado op completar trivial suponer op completado iteracion compareandset debio ejecutar él lneo caso p ush lneo caso p op inicial pila existir cantidad infinito nodo operacion p ush nodo implicar completo algun momento pila vacir operacion completado operación pop analogo operacion p op completo lneo fallar infinito lneo falla infinito argumento similar visto existir operacion push poner nodo lneo argumento caso lneo lneo falla existir operacion p op completado procedimiento linealizacion conjunto setstacklogic algoritmo operacion pendiente bloquear algoritmo algoritmo mantener completar infinidad operación operacion completar suponer perdida generalidad ejecucion finito operación pendiente tener bloquear dema ejecucion finito operación pendiente algoritmo setstacklogic linealizacion conjunto objeto codificado variable t op valor etiqueta booleán elim nodo pila elemento pila nodo cuyo valor booleano elim f alse llamar logico pila definir formalmente linealizar ejecucion procederer construir linealizacion s asignar punto linealizacion operacion op punto linealizacion op denotado evento primitivo invocacion respuesta gamos operación punto linealizacion linealizacion s proporcionar explcitamente finalmente ver linealizacion s inducir relacion orden s clase concurrencia s cumplir especificacion pila op dar instrucción linealizacion definir punto nealizacion op parecer efecto recorder evento primitivo significar ejecucion lnea algoritmo operacion op operacion p ush considerer ultimo iteracion ciclo w hile llamemosle eca paso ejecutar instruccion compareandset lneo unico compareandset exitoso linealizar conjunto operacion p ush punto eca clase concurrencia s op operacion p op caso retornar cadena vaco p op op operacion p op retornar lneo corresponder operación p op retornir cadena vaco considerer ultimo iteracion ciclo while llamemosle eget paso correspondiente lneo iteracion paso extraer nodo t almacenado variable t op metodo get condicion lneo ultimo iteracion operacion retorno lneo nodo t valor paso eget linealizar conjunto operación p op retornar punto eget clase concurrencia s b retornar elemento nulo p op x op operacion p op retornar lneo corresponder operación p op retornir valor cadena x considerer conjunto ux contener operación p op devolver elemento suposicion elemento colocar pila maximo operacion p op ux extrae nodo ultimo ejecucion lneo denoter tx nodo cuyo valor observ operación ux extraen nodo tx corresponder ejecucion lneo considerer evento operación p op ux escribir variable booleana elim t correspondiente lneo llam ex elim paso not ex elim unico paso ux realmente cambiar variable elim eliminar logicamente nodo tx paso ex elim linealizar operación ux paso ex elim operación ux formar clase concurrencia ubicado ex elim simplicidad llamemosle op clase concurrencia observ clasificar clase concurrencia op clase concurrencia correspondiente operacion p op clase concurrencia correspondiente conjunto operación p op subcaso clase concurrencia op corresponder operacion p op p op b clase concurrencia op corresponder conjunto operación ux p p opt operacion p opi devolver p opi x x elemento nulo clase concurrencia definir ejecucion conjunto secuencial observir clase concurrencia op s punto linealizacion cion punto linealizacion operación definar s clase concurrencia dar clase concurrencia op op s definir op s op relacion orden clase concurrencia linealizacion ejecucion clase concurrencia definir ejecucion secuencial conjunto mostrar él ver dar clase concurrencia op s punto linealizacion evento invocacion respuesta conjunto operación ope cumplir op s punto linealizacion instrucción subseccion probemo cumplir op clase concurrencia correspondiente operacion p eca ecar ejecucion instruccion compareandset lneo p ultimo iteracion ciclo w hile claramente eca invocacion preceder evento ción ciclo w hile eca respuesta operacion p corresponder evento asociado ejecucion lneo op clase concurrencia correspondiente conjunto operación p op subcaso clase concurrencia op corresponder operacion p op p op punto linealizacion eget op eget invocacion preceder evento iteración ciclo w hile eget op respuesta operacion p op corresponder evento asociado ejecucion lneo b clase concurrencia op corresponder conjunto operación ux p p opt operacion p opi devolver p opi x x elemento nulo caso linealizar conjunto operación deber probar operacion p opi ux opi opi ux conjunto operación p op devolver elemento recorder ex elim ex elim evento descrito instruccion procedimiento v ex elim evento cambiar tado f alse t rue pasar opi ex elim caso contrario ex elim opi ejecucion tx f alse resultar fallido har pasar lneo alterar valor t op iteracion nodo t tendrar valor distinto x elemento x insertar unico contradecir p opi retornar tx pasar opi ex elim p opi ux ex elim opi facil ex elim evento cambiar p opi ux ex elim eelim eelim ejecucion lneo p opi ultimo iteracion eelim opi transitividad precedencia ex elim opi concluir operacion p opi ux opi opi ux conjunto operación p op devolver elemento concluir s linealizacion conjunto vear cion s operación respuesta considerar operación s operacion linealizar paso invocacion respuesta operacion clase concurrencia aparecer clase concurrencia s transitividad definicion s clase concurrencia respectivamente concluir s linealizacion conjunto faltar s cumplir especificacion pila especificacion pila multiplicidad algoritmo setstacklogic seccion demostrar algoritmo setstacklogic satisfacer especificacion pila multiplicidad demostracion definir logico pila formalmente facilitar demostracion definicion q n forma q ak ai n i k decimos q logico representar pila tm elemento ai nodo tj algoritmo f alse valor ai t observ memoria representado nodo tm logico representado nodo logicamente pila cumplir f alse nodo cumplir condicion participar pila logico setstacklogic satisfacer especificacion pila multiplicidad demostracion ejecucion finito operación pendiente algoritmo setstacklogic mostremo cumplir especificacion pila pila logico s linealizacion conjunto obtenido procedimiento linealizacion v clase concurrencia ordenado s s s opm opi clase concurrencia operacion m numero clase concurrencia definido em prefijo operación opm sm correspondiente linealizacion conjunto inducir orden s s opm demostrar sm satisfacer especificacion pila m m cuyo tm induccion caso base trivial s pila ejecutar s hipotesis induccion suponer ejecucion secuencial conjunto sm em cumplir especificacion pila cuyo logico tm paso inductivo demoster cumplir cuyo linealizacion conjunto dado procedimiento v inducir orden clase equivalencia ordenarla s s s hipotesis induccion prefijo em cumplir requerido bastar mostrar ejecutar operacion transicion corresponder especificacion pila t op variable compartido ejecutar observ hipotesis induccion t op obtener ejecutar sm ejecutar clase concurrencia orden s s s opm q nel logico pila ejecutar clase concurrencia opm representar logico pila tm clase concurrencia correspondiente operacion p em punto linealizacion op eca corresponder ejecucion lneo compareandset exitoso ultimo iteracion punto unico evento p ush logico pila cambio q q bastar opm q q n ejecutar p q cumplirar formalmente transicion q p q p t rue opm s asegurar pila evento eca cambiar q q pila q algun evento modifico opm asegurar ningun evento modificar logico pila q unico evento cambiar logico ejecución lneo caso compareandset exitoso anadar nodo lneo justo evento corresponderan punto linealizacion operacion op opm s op s contradecir orden inducir linealizacion conjunto logico evento evento eca q eca metodo compareandset exitoso cambiar logico pila q insertar nodo t valor f alse memoria tm t cuyo logico q orden fijar lista tm operacion cumplir transicion q p q p t rue concluir producir ejecucion secuencial conjunto pila valido consistente pila representado logico codificado q representado variable t op clase concurrencia correspondiente conjunto operación p op em caso clase concurrencia corresponder operacion p op p op punto linealizacion eget correspondiente lneo ultimo iteracion operacion p op retornar lneo suposicion eget logico pila ejecutar caso contrario evento eget obtendrar nodo t ejecutar lneo satisfactoriamente contradecir p op observ operación p op devolver cadena nulo p op realidad alterar logico pila ejecutar lneo ejecutar op logico permanecer invariante palabra operacion cumplir transicion p op p op concluir producir ejecucion secuencial conjunto pila valido consistente pila representado logico codificado representado variable t op b clase concurrencia corresponder conjunto operación ux p p opt operacion p opi devolver p opi x x elemento nulo recorder conjunto ux contener operación p op devolver elemento punto linealizacion ex elim corresponder ejecucion lneo operación p opx ux punto unico evento logico pila cambio cambiar f alse t rue evento ex elim tx nodo contener valor x bastar opm q p p ny n ejecutar opm s asegurar pila evento ex elim cambiar p p pila cambio opm algun evento cambio asegurar ningun evento cambiar logico pila p unico evento cambiar logico ejecución lneo caso compareandset exitoso anadar nodo lneo justo evento corresponderan punto linealizacion operacion cuyo clase concurrencia op opm s op s contradecir orden evento ex elim logico p asegurar nodo tm t f alse linea nodo definicion valor ex elim cambiar t rue tm cambiar logico pila p esite nodo cuyo valor logicamente pila x lneo devolver palabra operacion cumplir transicion p p p opt p p p opt concluir producir ejecucion secuencial pila valido consistente pila representado logico codificado q representado variable t op concluir sm producir ejecucion secuencial pila valido consistente m consiguiente valer ver funcionamiento seccion destinada explicar funcionamiento algoritmo setstacklogic posible escenario as mostrar transicion forma explicito principalmente ejemplo llegar comportar memoria sistema ejecucion concurrente hilo representar lneo negro punteado evento representar ndiz figurar representacion conjunto operación p opi retornar valor caso conjunto clase concurrencia operación siguiente ejemplo considerer hilo ejecutar concurrentemente ejemplo representado figura hilo ejecutar operacion p opi considerarer caso operación retornar elemento apreciar demostración iteracion relevante operación ultimo ejemplo considerer ultimo iteracion p opi considerer operación ocurrir forma pila constituida lista nodo f alse t rue f alse f alse logico pila nodo valor pila instruccion lneo representar eget operacion extra nodo referencia t iteracion operación p opi finalizar valor nodo valor booleano f alse operación encontrar nodo distinto lneo operacion ejecutar lneo evento representado eelim i nodo f alse operación pasar lneo llamemosle ei ejecucion lneo considerer perdida generalidad operacion p ejecutar dicho lneo punto linealizacion conjunto operación evento producir cambio logico pila representar lneo punteada rojo evento logico pila cambio vear referencia t op apuntar nodo t rue operación ejecutar lneo evento eca i compareandset cambiar referencia t op relevancia finalmente operación retornar evento eca i referencia atomico t op cambiar memoria real pila cambiar representar flecha negro figura cambio logico lneo rojo puntead punto linealizacion conjunto figurar representacion conjunto operación p opi retornar valor caso tendrar clase concurrencia ejemplo considerer conjunto operación p opi representado figura operación ocurrir pila constituida lista nodo f alse f alse t rue f alse logico pila instruccion lneo representar eget operación extraer referencia nodo f alse usar notacion lneo evento representado eelim i ei ejecucion lneo caso evento eelim i operación p p ocurrir evento logico pila cambio evento eelim ocurrir if permitir ejecutar lneo p operación p p completar forma similar caso evento eca referencia t op cambiar apuntar nodo t rue nodo t rue instruccion lneo observ nodo t rue logicamente pila operacion p volver iterar intento remover nodo inicio pila nodo t rue logicamente instruccion falla pasar lneo realizar eca cambiar referencia t op nodo t rue nodo f alse operacion p volver iterar extraer nodo eget cabezal ejecutar lnea retornar valor figurar representacion interaccion operación concurrent p f alse p f alse considerer conjunto operación p f alse p f alse representado figura simplicidad ejemplificarer par operación ocurrir pila constituida lista nodo f alse f alse logico pila instruccion lneo representar eget ambos operación extraer referencia nodo f alse lneo operacion p conectar nodo f alse nodo evento lneo realizar compareandset cambiar referencia nodo evento eca evento logico memoria real cambiar mostrar figura cambio logico operacion p ejecutar compareandset evento eca fallar referencia cambio operacion p volver iterar comportamiento similar operacion p insertar nodo f alse evento eca pila ejecucion operación p p f alse f alse f alse f alse observ caso punto linealizacion distinto ultimo iteracion respectivo operacion p ushi clase concurrencia s observ ocurrir punto linealizacion operacion operacion inevitablemente fallar compareandset evento eca retornar f alse cambiar logico pila punto linealizacion propiedad permitir linealizar conjunto operación p ush clase concurrencia unico elemento operación p op poseer punto linealizacion permitir conjunto operación poder linealizar punto linelizacion figurar representacion interaccion operación concurrent p f alse p op ejemplo considerer operacion p f alse p op sentado figura comportamiento pila constituida lista nodo f alse f alse f alse f alse logico pila instruccion lneo representar eget ambos operación extraer referencia nodo f alse operacion p op ejecutar instruccion lneo ocurrir punto linealizacion pila cambiar logico mostrar transicion referencia continuo apuntar nodo t rue operacion p f alse ejecutar lneo fallar t t rue lneo cambio referencia t op nodo f alse ejecucion compareandset lneo falla independientemente operacion completar retornar valor nodo lneo operacion p ush iniciar iteracion obtener t op referencia nodo f alse ejecutar debido evento llegar lneo evento eca ejecutar compareandset exitoso cambiar referencia nodo anadido pila pila cambiar eca terminar observ problema lugar operacion p op considerar conjunto operación operación ejemplo figura conjunto arbitrario operación perteneciente clase concurrencia gracias unico operacion cambiar logico pila contener punto linealizacion conjunto operación p opi retornir elemento agradecimiento trabajo financiar programa beca nacional estudio posgrado conacyt agradezar comentario discusión dr armar castaneda rojano brindo conocimiento experiencia ayudar medida realizacion trabajo resultado parcial tesis maestra herlihy and shavit the art of multiprocessor programming morgan kaufmann haas lippautz henzinger payer sokolova kirsch and sezgin cf henzinger kirsch payer sezgin and sokolova sigplar not kirsch payer rock and sokolova in algorithms and architectures for parallel cessing edited by xiang stojmenovic apduhaber wang nakano and zomaya springer berlin heidelberg berlin heidelberg pp castaneda rajsbaum and raynal distributed computing castaneda and pín disc leibniz international proceedings in informatics lipics castaneda rajsbaum and raynal opodis leibniz international proceedings in matics lipics michael vechev and saraswat idempotent work stealing acm herlihy and wing acm trans program lang syst castaneda rajsbaum and raynal acm